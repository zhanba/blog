{
    "componentChunkName": "component---src-templates-post-tsx",
    "path": "/performance/",
    "result": {"data":{"markdownRemark":{"html":"<h2>性能的重要性 why performance matters</h2>\n<ul>\n<li>retaining users</li>\n<li>conversions</li>\n<li>user experience</li>\n<li>delivering information expediently</li>\n</ul>\n<h2>关注点</h2>\n<ul>\n<li>Mind what resources you send\n<ul>\n<li>css 框架是否必须</li>\n<li>js 库是否必须</li>\n<li>不是所有网站都需要成为 SPA（js 需要下载，解析，编译，执行，十分昂贵）</li>\n</ul>\n</li>\n<li>Mind how you send resources\n<ul>\n<li>http/2</li>\n<li><a href=\"https://www.w3.org/TR/resource-hints/\">resource hint</a> / <a href=\"https://www.keycdn.com/blog/resource-hints/\">preload</a></li>\n<li>code splitting</li>\n</ul>\n</li>\n<li>Mind how much data you send\n<ul>\n<li>文本压缩</li>\n<li>服务端压缩。gzip</li>\n<li>优化图片</li>\n<li>替换成更好的格式 / webp</li>\n<li>响应式图片（移动端）/ srcset</li>\n<li>使用视频而不是 GIF</li>\n<li><a href=\"http://httpwg.org/http-extensions/client-hints.html\">Client hints</a></li>\n</ul>\n</li>\n</ul>\n<h2>RAIL 模型</h2>\n<ul>\n<li>Response: 100ms</li>\n<li>Animation: 10ms/frame</li>\n<li>Idle: 要实现小于 100 毫秒的响应，应用必须在每 50 毫秒内将控制返回给主线程</li>\n<li>Load: 100ms</li>\n</ul>\n<h2>loading performance</h2>\n<h3>性能测量</h3>\n<ul>\n<li>Lighthouse</li>\n<li>WebPageTest</li>\n<li>PageSpeed Insights</li>\n</ul>\n<h3>Performance API</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Get Navigation Timing entries 针对html文档</span>\nperformance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'navigation'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Get Resource Timing entries 针对其他依赖资源</span>\nperformance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resource'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>网络请求的重要时间节点</h3>\n<h4>DNS lookup</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Measuring DNS lookup time</span>\n<span class=\"token keyword\">var</span> pageNav <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'navigation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> dnsTime <span class=\"token operator\">=</span> pageNav<span class=\"token punctuation\">.</span>domainLookupEnd <span class=\"token operator\">-</span> pageNav<span class=\"token punctuation\">.</span>domainLookupStart\n\n<span class=\"token comment\">// 跨域资源必须开启 Timing-Allow-Origin: https://developer.mozilla.org</span>\n<span class=\"token comment\">// https://www.w3.org/TR/resource-timing-2/#sec-timing-allow-origin</span></code></pre></div>\n<h4>Connection negotiation</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Quantifying total connection time</span>\n<span class=\"token keyword\">var</span> pageNav <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'navigation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> connectionTime <span class=\"token operator\">=</span> pageNav<span class=\"token punctuation\">.</span>connectEnd <span class=\"token operator\">-</span> pageNav<span class=\"token punctuation\">.</span>connectStart\n<span class=\"token keyword\">var</span> tlsTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\">// &lt;-- Assume 0 by default</span>\n\n<span class=\"token comment\">// Did any TLS stuff happen?</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageNav<span class=\"token punctuation\">.</span>secureConnectionStart <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Awesome! Calculate it!</span>\n  tlsTime <span class=\"token operator\">=</span> pageNav<span class=\"token punctuation\">.</span>connectEnd <span class=\"token operator\">-</span> pageNav<span class=\"token punctuation\">.</span>secureConnectionStart\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Requests and responses</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Cache seek plus response time</span>\n<span class=\"token keyword\">var</span> pageNav <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'navigation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> fetchTime <span class=\"token operator\">=</span> pageNav<span class=\"token punctuation\">.</span>responseEnd <span class=\"token operator\">-</span> pageNav<span class=\"token punctuation\">.</span>fetchStart\n\n<span class=\"token comment\">// Service worker time plus response time</span>\n<span class=\"token keyword\">var</span> workerTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pageNav<span class=\"token punctuation\">.</span>workerStart <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  workerTime <span class=\"token operator\">=</span> pageNav<span class=\"token punctuation\">.</span>responseEnd <span class=\"token operator\">-</span> pageNav<span class=\"token punctuation\">.</span>workerStart\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Request plus response time (network only)</span>\n<span class=\"token keyword\">var</span> totalTime <span class=\"token operator\">=</span> pageNav<span class=\"token punctuation\">.</span>responseEnd <span class=\"token operator\">-</span> pageNav<span class=\"token punctuation\">.</span>requestStart\n\n<span class=\"token comment\">// Response time only (download)</span>\n<span class=\"token keyword\">var</span> downloadTime <span class=\"token operator\">=</span> pageNav<span class=\"token punctuation\">.</span>responseEnd <span class=\"token operator\">-</span> pageNav<span class=\"token punctuation\">.</span>responseStart\n\n<span class=\"token comment\">// Time to First Byte (TTFB)</span>\n<span class=\"token keyword\">var</span> ttfb <span class=\"token operator\">=</span> pageNav<span class=\"token punctuation\">.</span>responseStart <span class=\"token operator\">-</span> pageNav<span class=\"token punctuation\">.</span>requestStart\n\n<span class=\"token comment\">// HTTP header size</span>\n<span class=\"token keyword\">var</span> pageNav <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'navigation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">var</span> headerSize <span class=\"token operator\">=</span> pageNav<span class=\"token punctuation\">.</span>transferSize <span class=\"token operator\">-</span> pageNav<span class=\"token punctuation\">.</span>encodedBodySize\n\n<span class=\"token comment\">// Compression ratio</span>\n<span class=\"token keyword\">var</span> compressionRatio <span class=\"token operator\">=</span> pageNav<span class=\"token punctuation\">.</span>decodedBodySize <span class=\"token operator\">/</span> pageNav<span class=\"token punctuation\">.</span>encodedBodySize</code></pre></div>\n<h3>在应用代码中获取时间</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Get timing data for an important hero image</span>\n<span class=\"token keyword\">var</span> heroImageTime <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://somesite.com/images/hero-image.jpg'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Get timing data for an important hero image</span>\n<span class=\"token keyword\">var</span> allTheTimings <span class=\"token operator\">=</span> performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get entries by name</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://somesite.com/images/hero-image.jpg'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Get entries by type</span>\n  <span class=\"token literal-property property\">entryType</span><span class=\"token operator\">:</span> <span class=\"token string\">'resource'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Get entries by their initiatorType value:</span>\n  <span class=\"token literal-property property\">initiatorType</span><span class=\"token operator\">:</span> <span class=\"token string\">'img'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>PerformanceObserver</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Instantiate the performance observer</span>\n<span class=\"token keyword\">var</span> perfObserver <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get all the resource entries collected so far</span>\n  <span class=\"token comment\">// (You can also use getEntriesByType/getEntriesByName here)</span>\n  <span class=\"token keyword\">var</span> entries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Iterate over entries</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> entries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Do the work!</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Run the observer</span>\nperfObserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Polls for Navigation and Resource Timing entries</span>\n  <span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'navigation'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'resource'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Beacon API</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'unload'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Caution: If you have a _lot_ of performance entries, don't send _everything_ via getEntries. This is just an example.</span>\n    <span class=\"token keyword\">let</span> rumData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    rumData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'entries'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>performance<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">// Queue beacon request and inspect for failure</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>navigator<span class=\"token punctuation\">.</span><span class=\"token function\">sendBeacon</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/phone-home'</span><span class=\"token punctuation\">,</span> rumData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Recover here (XHR or fetch maybe)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>User-centric performance metrics</h2>\n<ul>\n<li>first paint (FP) and first contentful paint (FCP)</li>\n<li>First meaningful paint (FMP)</li>\n<li>Time to interactive (TTI)</li>\n<li><a href=\"https://w3c.github.io/longtasks/\">https://w3c.github.io/longtasks/</a></li>\n</ul>\n<h3>paint</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> entry <span class=\"token keyword\">of</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// `entry` is a PerformanceEntry instance.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>entryType<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>startTime<span class=\"token punctuation\">)</span> <span class=\"token comment\">// DOMHighResTimeStamp</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span> <span class=\"token comment\">// DOMHighResTimeStamp</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Start observing the entry types you care about.</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'resource'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'paint'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Tracking long tasks</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> entry <span class=\"token keyword\">of</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">ga</span><span class=\"token punctuation\">(</span><span class=\"token string\">'send'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'event'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">eventCategory</span><span class=\"token operator\">:</span> <span class=\"token string\">'Performance Metrics'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">eventAction</span><span class=\"token operator\">:</span> <span class=\"token string\">'longtask'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">eventValue</span><span class=\"token operator\">:</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>startTime <span class=\"token operator\">+</span> entry<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">eventLabel</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>attribution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'longtask'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>event</h2>\n<ul>\n<li>DOMContentLoaded html DOM 加载完成</li>\n<li>load 所有资源被加载后</li>\n<li>js 脚本会阻塞 DOM 解析</li>\n<li>浏览器会边解析 html 边渲染，first paint 会提前</li>\n<li>js 脚本放到最后不会影响 first paint，DOMContentLoaded 不变</li>\n</ul>\n<h2>优化内容效率</h2>\n<h3>避免不必要的下载</h3>\n<ul>\n<li>清点网页资产</li>\n<li>评估价值和性能</li>\n<li>确定是否提供了足够的价值</li>\n</ul>\n<h3>优化文本</h3>\n<ul>\n<li>减少引用不必要的库</li>\n<li>先应用内容特定优化：CSS、JS 和 HTML 压缩源码程序。/代码压缩器</li>\n<li>采用 GZIP 对压缩源码后的输出进行压缩。</li>\n</ul>\n<h3>优化图形内容</h3>\n<ul>\n<li>去掉不必须的图片</li>\n<li>使用 css 效果代替</li>\n<li>使用字体代替</li>\n<li><a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/images?hl=zh-cn#images-in-markup\">srcset 和 picture</a></li>\n<li>徽标和艺术线条等矢量插画及纯色图形使用矢量格式如 svg(优化 svg，<a href=\"https://github.com/svg/svgo\">https://github.com/svg/svgo</a>, 文本压缩方法适用于 svg)</li>\n<li>Data URI</li>\n<li>css: image-set()/媒体查询</li>\n<li>选择合适的图片格式\n<ul>\n<li>jpeg 为有损压缩</li>\n<li>gif 的 color space 只有 256，无损压缩</li>\n<li>png 无损，支持透明，png8/png24</li>\n<li>webp 压缩率高，支持透明和动画，有损，只有 chrome 支持，需要服务端/CDN 对浏览器进行判断</li>\n</ul>\n</li>\n<li>GIF 转 MP4(ffmpeg), 体积更小，一些 cpu 带有视频硬件加速，解码更快</li>\n<li>使用图片转换和压缩工具如 jpegtran/OptiPNG,最好利用工具自动化进行\n<ul>\n<li><a href=\"https://www.imagemagick.org/script/index.php\">https://www.imagemagick.org/script/index.php</a></li>\n<li><a href=\"https://github.com/imagemin/imagemin\">https://github.com/imagemin/imagemin</a></li>\n</ul>\n</li>\n<li>image sprites</li>\n<li>去除图片元数据 metaddata（ps，gimp）</li>\n<li>调整图片大小\n<ul>\n<li>裁剪图片</li>\n<li>降低图片质量</li>\n<li>压缩图片 Compress Images, 更先进的编码器 <a href=\"https://github.com/google/guetzli\">Guetzli</a>/<a href=\"https://github.com/mozilla/mozjpeg\">MozJPEG</a></li>\n</ul>\n</li>\n<li>关键图片 preload</li>\n<li>图片懒加载 <a href=\"https://github.com/zouhir/lqip-loader\">https://github.com/zouhir/lqip-loader</a> <a href=\"https://github.com/aFarkas/lazysizes\">https://github.com/aFarkas/lazysizes</a></li>\n<li>使用强缓存 e.g Cache-Control:public; max-age=31536000</li>\n</ul>\n<h4>JPEG compression modes</h4>\n<ul>\n<li>baseline (or sequential) JPEG 从上往下逐行显示</li>\n<li>Progressive JPEG 从模糊到清晰，低网速情况下体验更好，但是解码更耗费 CPU</li>\n</ul>\n<h4>图像优化基本知识(png 为例)</h4>\n<ul>\n<li>每个像素点存储 rgba 四个通道</li>\n<li>每个通道包含 8 位（2^8）色阶</li>\n<li>优化方式\n<ul>\n<li>减少色阶</li>\n<li>增量编码 Delta encoding</li>\n<li><a href=\"https://en.wikipedia.org/wiki/Image_compression\">更多专业方法</a></li>\n</ul>\n</li>\n</ul>\n<h3>优化 javascript</h3>\n<ul>\n<li>code-splitting : critical/non-critical(lazy-load)</li>\n<li>Minification</li>\n<li>es5: <a href=\"https://github.com/mishoo/UglifyJS2\">UglifyJS</a></li>\n<li>es6: <a href=\"https://github.com/babel/minify\">babel-minify</a> / <a href=\"https://github.com/mishoo/UglifyJS2/tree/harmony\">uglify-es</a></li>\n<li>Compression: gzip / <a href=\"https://github.com/google/brotli\">Brotli</a></li>\n<li>Removing unused code\n<ul>\n<li>babel-preset-env / browserlist</li>\n<li>tree-shaking</li>\n<li>lodash-babel-plugin/ ContextReplacementPlugin for moment / babel-plugin-import</li>\n</ul>\n</li>\n<li>cache\n<ul>\n<li>http cache</li>\n<li>service worker cache</li>\n<li>webpack long term cache / chunkhash</li>\n</ul>\n</li>\n</ul>\n<h3>第三方 js 脚本</h3>\n<ul>\n<li>why: performance/privacy/security/unpridictable/unintended consequences</li>\n<li>what: 社交分享/嵌入式视频播放/广告 iframe/分析统计脚本/ A/B test /辅助库</li>\n<li>优化：\n<ul>\n<li>async/defer</li>\n<li>自己 host 脚本，如果第三方很慢（但是无法处理更新问题，可以考虑使用 service-worker 来处理缓存策略）</li>\n<li>使用 Resource hints\n<ul>\n<li><code class=\"language-text\">&lt;link rel=\"dns-prefetch\" href=\"http://example.com\"></code></li>\n<li><code class=\"language-text\">&lt;link rel=\"preconnect\" href=\"https://cdn.example.com\"></code></li>\n</ul>\n</li>\n<li>使用 iframe 沙箱化脚本</li>\n<li>懒加载第三方脚本（渲染完成后加载/滚动到加载），Intersection Observer</li>\n<li>安全：https, iframe sandbox 属性， CSP(Content-Security-Policy)</li>\n</ul>\n</li>\n</ul>\n<h3>网页字体优化</h3>\n<ul>\n<li>字体文件大小 = 每个字形矢量路径的复杂度 * 字形数量</li>\n<li>格式： EOT，TTF，WOFF，WOFF2</li>\n<li>eot，ttf 无压缩，需要 gzip；woff 自带压缩；woff2 体积最小，优先使用</li>\n<li>@font-face format() 指定格式</li>\n<li>unicode-range</li>\n<li>字体渲染： 浏览器在构建好渲染树之后才知道需要哪些字体来渲染文本，因此字体请求会落后其他资源。\n<ul>\n<li>Safari 会在字体下载完成之前延迟文本渲染。</li>\n<li>Chrome 和 Firefox 会将字体渲染暂停最多 3 秒，之后他们会使用一种后备字体。并且字体下载完成后，他们会使用下载的字体重新渲染一次文本。</li>\n<li>IE 会在请求字体尚不可用时立即使用后备字体进行渲染，然后在字体下载完成后进行重新渲染。</li>\n</ul>\n</li>\n<li>Font Loading API</li>\n<li>使用 HTTP 长期缓存来缓存字体</li>\n</ul>\n<h3>HTTP 请求</h3>\n<ul>\n<li>除了降低下载的大小，也可以降低下载的频率</li>\n<li>合并文本资源（但需要注意 css 和 js 的文件合并顺序问题）</li>\n<li>合并图形资源，sprite</li>\n<li>Caveat 注意，合并文件对 http/2 可能无效。。</li>\n</ul>\n<h3>HTTP 缓存</h3>\n<ul>\n<li><a href=\"https://calendar.perfplanet.com/2016/a-tale-of-four-caches/\">A Tale of Four Caches</a></li>\n<li><a href=\"https://jakearchibald.com/2016/caching-best-practices/\">Caching best practices &#x26; max-age gotchas</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching\">HTTP caching</a></li>\n</ul>\n<h3>使用 Save-Data</h3>\n<ul>\n<li>TODO</li>\n</ul>\n<h2>参考</h2>\n<ul>\n<li><a href=\"https://developers.google.com/web/fundamentals/performance\">https://developers.google.com/web/fundamentals/performance</a></li>\n<li><a href=\"https://bitsofco.de/understanding-the-critical-rendering-path/\">https://bitsofco.de/understanding-the-critical-rendering-path/</a></li>\n<li><a href=\"https://www.igvita.com/2014/01/31/optimizing-web-font-rendering-performance/\">https://www.igvita.com/2014/01/31/optimizing-web-font-rendering-performance/</a></li>\n<li><a href=\"https://dassur.ma/things/less-snakeoil/\">https://dassur.ma/things/less-snakeoil/</a></li>\n</ul>","frontmatter":{"title":"web性能优化"}}},"pageContext":{"slug":"/performance/"}},
    "staticQueryHashes": ["3512877716"]}