{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header.tsx","webpack:///./src/layouts/index.tsx"],"names":["__webpack_exports__","_ref","data","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_layouts__WEBPACK_IMPORTED_MODULE_3__","allMarkdownRemark","edges","map","_ref2","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","fields","slug","style","color","textDecoration","marginBottom","rhythm","frontmatter","title","date","excerpt","totalCount","query","m","module","exports","require","default","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_fairy_gates__WEBPACK_IMPORTED_MODULE_1__","typography_theme_fairy_gates__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","theme","scale","options","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","ListLink","react_default","display","marginRight","gatsby_browser_entry","Header","textShadow","backgroundImage","site","siteMetadata","siteName","listStyle","float","Header_ListLink","_871777783","MainLayout","react","margin","marginTop","maxWidth","paddingLeft","paddingRight","Header_Header"],"mappings":"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","file":"component---src-pages-index-tsx-3922a708e3c57005cecd.js","sourcesContent":["import { graphql, Link } from 'gatsby'\r\nimport React from 'react'\r\nimport Layout from '../layouts'\r\nimport { Query } from '../typings/types'\r\nimport { rhythm } from '../utils/typography'\r\n\r\nexport default ({ data }: { data: Query }) => {\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        {/* <h1\r\n          style={{\r\n            borderBottom: '1px solid',\r\n            display: 'inline-block',\r\n          }}\r\n        >\r\n          Amazing Pandas Eating Things\r\n        </h1> */}\r\n        {data!.allMarkdownRemark!.edges!.map(({ node }) => (\r\n          <div key={node!.id}>\r\n            <Link\r\n              to={node!.fields!.slug!}\r\n              style={{\r\n                color: 'inherit',\r\n                textDecoration: 'none',\r\n              }}\r\n            >\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                {node!.frontmatter!.title}{' '}\r\n                <span\r\n                  style={{\r\n                    color: '#bbb',\r\n                  }}\r\n                >\r\n                  â€” {node!.frontmatter!.date}\r\n                </span>\r\n              </h3>\r\n              <p>{node!.excerpt}</p>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n        <h4>{data!.allMarkdownRemark!.totalCount} Posts</h4>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\r\n// import theme from 'typography-theme-github'\r\nimport theme from 'typography-theme-fairy-gates'\r\n\r\nconst typography = new Typography(theme)\r\n\r\nexport default typography\r\n\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\nexport const options = typography.options\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { graphql, Link, StaticQuery } from 'gatsby'\r\nimport React from 'react'\r\nimport { Query } from '../typings/types'\r\n\r\ninterface ILink {\r\n  to: string\r\n  children: React.ReactChild\r\n}\r\n\r\nconst ListLink = (props: ILink) => (\r\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\r\n    <Link to={props.to}>{props.children}</Link>\r\n  </li>\r\n)\r\n\r\nconst query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        siteName\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Header = () => (\r\n  <StaticQuery\r\n    query={query}\r\n    // tslint:disable-next-line:jsx-no-lambda\r\n    render={(data: Query) => (\r\n      <header style={{ marginBottom: `1.5rem` }}>\r\n        {data && (\r\n          <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\r\n            <h3 style={{ display: `inline` }}>{data!.site!.siteMetadata!.siteName}</h3>\r\n          </Link>\r\n        )}\r\n        <ul style={{ listStyle: `none`, float: `right` }}>\r\n          <ListLink to=\"/\">Home</ListLink>\r\n          <ListLink to=\"/content/\">Content</ListLink>\r\n          <ListLink to=\"/about/\">About</ListLink>\r\n        </ul>\r\n      </header>\r\n    )}\r\n  />\r\n)\r\n","import * as React from 'react'\r\n\r\nimport { Header } from '../components/Header'\r\nimport { rhythm } from '../utils/typography'\r\n\r\nconst MainLayout: React.SFC = ({ children }) => (\r\n  <div\r\n    style={{\r\n      margin: `0 auto`,\r\n      marginBottom: rhythm(1.5),\r\n      marginTop: rhythm(1.5),\r\n      maxWidth: 800,\r\n      paddingLeft: rhythm(3 / 4),\r\n      paddingRight: rhythm(3 / 4),\r\n    }}\r\n  >\r\n    <Header />\r\n    {children}\r\n  </div>\r\n)\r\n\r\nexport default MainLayout\r\n"],"sourceRoot":""}